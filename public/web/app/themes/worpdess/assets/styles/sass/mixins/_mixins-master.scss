// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}



// Centers an element vertically and horizontally. If the element needs to be absolute positioned, declare 'position: absolute;' after applying the mixin to override the 'position: relative.' 
@mixin centerVH()
{
	position: relative;
	top: 50%;
	left: 50%;
	@include transform(translate(-50%, -50%));
}


// Overlays element on top of parent (parent must have position: relative). Typically used for <a> tags in a container.
@mixin overlayElement()
{
	display: block;
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
}


// Resets the bourbon neat grid omega value for a previous breakpoint. Provides a base to work from again.
//
//  Usage: @include omega-reset(3n);
//         @include span-columns(xx);
//         @include omega(xn);
@mixin omega-reset($nth) 
{
  &:nth-child(#{$nth}) { margin-right: flex-gutter(); }
  &:nth-child(#{$nth}+1) { clear: none }
}


